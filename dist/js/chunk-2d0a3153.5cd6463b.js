(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0a3153"],{"0151":function(s,e,t){"use strict";t.r(e);var a=function(){var s=this,e=s.$createElement;s._self._c;return s._m(0)},r=[function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("section",[t("h1",[s._v("THREE.js-世界坐标和屏幕坐标之间的转换")]),t("h2",[s._v("屏幕坐标 -> 世界坐标")]),t("p",[s._v("将屏幕坐标转化为世界坐标并通过射线抓取3D世界坐标中的物体。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" mousePosition = getMousePosition(event, renderer.domElement)"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// renderer是一个一个WebRenderer渲染器")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 设置射线的起点是相机")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" raycaster =  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" THREE.Raycaster();\nraycaster.setFromCamera(mousePosition, camera);\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" intersects = raycaster.intersectObjects(scene.children, "),t("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v(");\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 将射线投影到屏幕，如果scene.children里的某个或多个形状相交，则返回这些形状")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 第二个参数是设置是否递归，默认是false，也就是不递归。当scene里面添加了Group对象的实例时，就需要设置这个参数为true")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 第一个参数不传scene.children也可以，传一个group.children或一个形状数组都可以（这样可以实现一些特别的效果如点击内部的效果）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 另外，因为返回的是一个数组，所以遍历数组就可以获得所有相交的对象，当元素重叠时，特别有用")]),s._v("\n\n")])]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-function"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("getMousePosition")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("domEvent, domElement")]),s._v(") ")]),s._v("{\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" x = "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(", y = "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(";\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (domEvent.type === "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'touchstart'")]),s._v(") {\n    x = domEvent.touches["),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("].pageX;\n    y = domEvent.touches["),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("].pageY;\n  } "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (domEvent.type === "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'touchend'")]),s._v(") {\n    x = domEvent.changedTouches["),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("].pageX;\n    y = domEvent.changedTouches["),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("].pageY;\n  } "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v(" {\n    x = domEvent.clientX;\n    y = domEvent.clientY;\n  }\n  x = x / domElement.clientWidth;\n  y = y / domElement.clientHeight;\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" position = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" THREE.Vector2();\n  position.x = x * "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(" - "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(";\n  position.y = -y * "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(" + "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(";\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" position;\n}\n")])]),t("h2",[s._v("世界坐标 -> 屏幕坐标")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-function"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("convert2ScreenPoint")]),s._v(" ("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("camera, cavasDom, worldPoint")]),s._v(") ")]),s._v("{\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" pp = worldPoint.clone().project(camera) "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//得到世界坐标在camera相机对象矩阵变化下对应的标准设备坐标， 标准设备坐标xyz的范围是[-1,1]")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" clientWidth = cavasDom.clientWidth\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" clientHeight = cavasDom.clientHeight\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" left = (pp.x + "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(") / "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(" * clientWidth\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" top = ("),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(" - pp.y) / "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(" * clientHeight\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" {\n    left,\n    top,\n    pp\n  }\n}\n")])])])}],n=t("6691"),l={},p=Object(n["a"])(l,a,r,!1,null,null,null);e["default"]=p.exports}}]);